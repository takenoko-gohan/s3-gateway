[tasks.localstack-setup]
command = "docker"
args = ["run", "--rm", "-it", "-d", "--name", "localstack", "-p", "4566:4566", "-e", "SERVICES=sts,s3", "localstack/localstack"]

[tasks.localstack-teardown]
command = "docker"
args = ["kill", "localstack"]

[tasks.create-bucket]
env = { AWS_SECRET_ACCESS_KEY = "dummy", AWS_DEFAULT_REGION = "us-east-1" }
script = [
    "AWS_ACCESS_KEY_ID='012345678901' aws --endpoint-url=http://localhost:4566 s3 mb s3://foo.example.com",
    "AWS_ACCESS_KEY_ID='012345678901' aws --endpoint-url=http://localhost:4566 s3 sync ./tests/data s3://foo.example.com",
    "AWS_ACCESS_KEY_ID='012345678901' aws --endpoint-url=http://localhost:4566 s3 mb s3://bar.example.net",
    "AWS_ACCESS_KEY_ID='012345678901' aws --endpoint-url=http://localhost:4566 s3 sync ./tests/data s3://bar.example.net",
    "AWS_ACCESS_KEY_ID='123456789012' aws --endpoint-url=http://localhost:4566 s3 mb s3://foobar.example.com",
    "AWS_ACCESS_KEY_ID='123456789012' aws --endpoint-url=http://localhost:4566 s3 sync ./tests/data s3://foobar.example.com",
]

[tasks.create-bucket.windows]
env = { AWS_SECRET_ACCESS_KEY = "dummy", AWS_DEFAULT_REGION = "us-east-1" }
script = [
    "set AWS_ACCESS_KEY_ID='012345678901'",
    "aws --endpoint-url=http://localhost:4566 s3 mb s3://foo.example.com",
    "aws --endpoint-url=http://localhost:4566 s3 sync ./tests/data s3://foo.example.com",
    "aws --endpoint-url=http://localhost:4566 s3 mb s3://bar.example.net",
    "aws --endpoint-url=http://localhost:4566 s3 sync ./tests/data s3://bar.example.net",
    "set AWS_ACCESS_KEY_ID='123456789012'",
    "aws --endpoint-url=http://localhost:4566 s3 mb s3://foobar.example.com",
    "aws --endpoint-url=http://localhost:4566 s3 sync ./tests/data s3://foobar.example.com",
]

[tasks.local-setup]
run_task = { name = [
    "localstack-setup",
    "create-bucket",
], fork = true }

[tasks.local-teardown]
run_task = { name = [
    "localstack-teardown",
], fork = true }

[tasks.aarch64-test-build]
command = "cargo"
install_crate = "cargo-zigbuild"
args = ["zigbuild", "--target", "aarch64-unknown-linux-gnu", "--features", "__tests", "--release"]

[tasks.x86_64-test-build]
command = "cargo"
install_crate = "cargo-zigbuild"
args = ["zigbuild", "--target", "x86_64-unknown-linux-gnu", "--features", "__tests", "--release"]

[tasks.buildx-test-build]
script = [
    "docker buildx create --use --name mybuilder",
    "docker buildx build --load -t test-storage-gateway .",
]

[tasks.test-container-build]
run_task = { name = [
    "aarch64-test-build",
    "x86_64-test-build",
    "buildx-test-build",
], fork = true }

[tasks.cargo-integration-test]
command = "cargo"
args = ["test", "--test", "integration_test"]

[tasks.integration-test]
run_task = { name = [
    "test-container-build",
    "local-setup",
    "cargo-integration-test",
], fork = true, cleanup_task = "local-teardown" }

[tasks.aarch64-build]
command = "cargo"
install_crate = "cargo-zigbuild"
args = ["zigbuild", "--target", "aarch64-unknown-linux-gnu", "--release"]

[tasks.x86_64-build]
command = "cargo"
install_crate = "cargo-zigbuild"
args = ["zigbuild", "--target", "x86_64-unknown-linux-gnu", "--release"]

[tasks.buildx-build]
script = [
    "docker buildx create --use --name mybuilder",
    "docker buildx build --platform linux/arm64,linux/amd64 -t storage-gateway .",
]

[tasks.container-build]
run_task = { name = [
    "aarch64-build",
    "x86_64-build",
    "buildx-build",
], fork = true }